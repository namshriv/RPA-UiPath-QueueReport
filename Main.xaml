<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_ExcelReportFilePath="C:\WorkingFolder\Queue_Report.xlsx" this:Main.in_QueueName="QueueName" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ExcelReportFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_QueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_SendEmailTo" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1154,3702</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="76">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Design</x:String>
      <x:String>UiPath.Shared.Activities.Design.Converters</x:String>
      <x:String>UiPath.Shared.Activities.Design.Business</x:String>
      <x:String>UiPath.Activities.Presentation</x:String>
      <x:String>UiPath.Activities.Presentation.Converters</x:String>
      <x:String>UiPath.CSV.Activities.Design</x:String>
      <x:String>UiPath.Excel.Activities.Design</x:String>
      <x:String>UiPath.Excel.Activities.Design.Services</x:String>
      <x:String>UiPath.Excel.Activities.Design.Services.Helpers</x:String>
      <x:String>UiPath.Excel.Activities.Design.Properties</x:String>
      <x:String>UiPath.Excel.Activities.Design.CSV</x:String>
      <x:String>UiPath.Excel.Activities.Design.Converters</x:String>
      <x:String>UiPath.Excel.Activities.Design.Business</x:String>
      <x:String>UiPath.Excel.Activities.Design.Business.ProjectResources.EditUi</x:String>
      <x:String>UiPath.Excel.Activities.Design.Business.HostedTools</x:String>
      <x:String>UiPath.Excel.Activities.Design.Business.AddInContract</x:String>
      <x:String>UiPath.Shared.Contracts</x:String>
      <x:String>UiPath.Shared.Activities.Services</x:String>
      <x:String>UiPath.Shared.Activities.Services.Interfaces</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Properties</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities.Business.ChartModifications</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="1. This flow will create Excel report from UIPATH Orchestrator queue items, it can be used to generate reports for more than 100 Queue items .&#xA;2.  Assign Start date and End Date of report.&#xA;3.  Build Data table with columns which will be used to store data from queue items and write in excel file as Queue Report.&#xA;4. Get Total Queue items from UIPATH specific queue - In UIPATH there is limitation at a time from queue maximum 100 queue items can be retrieved.&#xA;5.  Flow will go in loop for each 100 queue items, each queue item details will be added to data table.&#xA;6. Excel template with required Headers will kept in specific path/location for Queue Report.&#xA;7. When all queue item records will be retrieved and added to data table flow will remove old records from excel file and add write new records from Deta table to excel file.&#xA;" DisplayName="Sequence-QueueReport" sap:VirtualizedContainerService.HintSize="923,3637" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="Output_QueueItem" />
      <Variable x:TypeArguments="x:String" Name="strTrransactionCount" />
      <Variable x:TypeArguments="x:Int32" Name="intcount" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtQueueReport" />
      <Variable x:TypeArguments="x:String" Name="strRequestDateTime" />
      <Variable x:TypeArguments="x:String" Name="strWRCode" />
      <Variable x:TypeArguments="x:String" Name="strNumber" />
      <Variable x:TypeArguments="x:String" Name="strReportType" />
      <Variable x:TypeArguments="x:String" Name="strQItemStatus" />
      <Variable x:TypeArguments="x:Int32" Name="intdtRowCount" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="intSkip" />
      <Variable x:TypeArguments="x:String" Name="strFirstDateCurrentMonth" />
      <Variable x:TypeArguments="x:String" Name="strLastDateCurrentMonth" />
      <Variable x:TypeArguments="s:DateTime" Name="datetimeFirstDateCurrentMonth" />
      <Variable x:TypeArguments="s:DateTime" Name="datetimeLastDateCurrentMonth" />
      <Variable x:TypeArguments="x:Int32" Name="intReportRows" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtQueueReportold" />
      <Variable x:TypeArguments="x:String" Name="strLastDateLastMonth" />
      <Variable x:TypeArguments="x:String" Name="strFirstDateLastMonth" />
      <Variable x:TypeArguments="s:DateTime" Name="datetimeFirstDateLastMonth" />
      <Variable x:TypeArguments="s:DateTime" Name="datetimeLastDateLastMonth" />
      <Variable x:TypeArguments="s:String[]" Name="strEmailTo" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="LastMonth StartDate and EndDate" sap:VirtualizedContainerService.HintSize="881,714" sap2010:WorkflowViewState.IdRef="Sequence_24">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign-FirstDate" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_28">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strFirstDateLastMonth]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[New DateTime(Now.Year,Now.Month,1).AddMonths(-1).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;First Date of Last Month: &quot; + strFirstDateLastMonth]" />
      <Assign DisplayName="Assign-DateTime-FirstDateofCurrentMonth" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_29">
        <Assign.To>
          <OutArgument x:TypeArguments="s:DateTime">[datetimeFirstDateLastMonth]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:DateTime">[Datetime.ParseExact(strFirstDateLastMonth,"MM/dd/yyyy",System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign-LastDate" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_30">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strLastDateLastMonth]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[new DateTime(now.Year,now.Month,1).AddDays(-1).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Last Date of Last Month: &quot; + strLastDateLastMonth]" />
      <Assign DisplayName="Assign-DateTime-LastDateofLastMonth" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_31">
        <Assign.To>
          <OutArgument x:TypeArguments="s:DateTime">[datetimeLastDateLastMonth]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:DateTime">[Datetime.ParseExact(strLastDateLastMonth,"MM/dd/yyyy",System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:BuildDataTable DataTable="[dtQueueReport]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="881,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;RequestDateTime&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;WRCode&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SendEmailTo&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Bannummer&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ReportType&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <Assign sap:VirtualizedContainerService.HintSize="881,60" sap2010:WorkflowViewState.IdRef="Assign_25">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[intSkip]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InterruptibleDoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="881,1934" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="845,1769" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetQueueItems Duration="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" TimeoutMS="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" From="[datetimeFirstDateLastMonth]" sap:VirtualizedContainerService.HintSize="803,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_3" QueueItemStates="Failed, Successful" QueueName="[in_QueueName]" Result="[Output_QueueItem]" Skip="[intSkip]" To="[datetimeLastDateLastMonth]" />
          <Assign DisplayName="Total Count Queue Items" sap:VirtualizedContainerService.HintSize="803,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[intcount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Output_QueueItem.Count]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="803,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Queue Item count: &quot; + Output_QueueItem.Count.ToString]" />
          <If Condition="[intcount&gt;0]" DisplayName="If-Count &gt;0" sap:VirtualizedContainerService.HintSize="803,1327" sap2010:WorkflowViewState.IdRef="If_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Sequence-QueueDTPopulation" sap:VirtualizedContainerService.HintSize="382,1170" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="ui:QueueItem" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="340,847" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[Output_QueueItem]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="ui:QueueItem">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body-QueueItemDetails" sap:VirtualizedContainerService.HintSize="304,714" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign-RequestDateTime" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strRequestDateTime]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.SpecificContent("RequestDateTime").tostring]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign-WRCode" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strWRCode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.SpecificContent("WRCode").tostring]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign-CutomerNumber" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.SpecificContent("Bannummer").tostring]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign-ReportType" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strReportType]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.SpecificContent("ReportType").tostring]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign-Status" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strQItemStatus]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.Status.tostring]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strRequestDateTime,strWRCode,in_SendEmailTo,strNumber,strReportType,strQItemStatus}]" DataTable="[dtQueueReport]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intdtRowCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intdtRowCount+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <Assign DisplayName="Assign-skip100" sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intSkip]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intSkip+100]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="340,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;SkipCount: &quot; +intSkip.ToString]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;No item is available for report&quot;]" />
                <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_1" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <ui:InterruptibleDoWhile.Condition>
        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="Output_QueueItem.Count&lt;101" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
      </ui:InterruptibleDoWhile.Condition>
    </ui:InterruptibleDoWhile>
    <If Condition="[dtQueueReport.Rows.Count&gt;0]" sap:VirtualizedContainerService.HintSize="881,471" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,313" sap2010:WorkflowViewState.IdRef="Sequence_26">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Delete-old-data-from report" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_30">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="452,624" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" WorkbookPath="[in_ExcelReportFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="418,515" sap2010:WorkflowViewState.IdRef="Sequence_29">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dtQueueReportold]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="Sheet1">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                    </Sequence>
                    <Assign sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[intReportRows]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[dtQueueReportold.Rows.Count+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelDeleteRange DisplayName="Delete Range-Delete old data from excel file" sap:VirtualizedContainerService.HintSize="376,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_4" Range="[&quot;A2:Z&quot;+intReportRows.ToString]" SheetName="Sheet1" ShiftCells="False" ShiftOption="ShiftUp">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelDeleteRange>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
          <ui:WriteRange AddHeaders="True" DataTable="[dtQueueReport]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[in_ExcelReportFilePath]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_27">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;No Queue Item is available to right in Report&quot;]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>